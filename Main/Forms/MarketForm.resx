<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>